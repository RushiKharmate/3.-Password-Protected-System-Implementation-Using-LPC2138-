#include <lpc214x.h>

#define bit(x) (1<<x)

unsigned char pass[4] = "5555";   // Set your Password

void delay() {
    unsigned int temp, ct;
    for(ct = 0; ct < 30; ct++) {
        for(temp = 0; temp < 6500; temp++);
    }
}

/* --------- DC Motor ----- */
void forward(void);
void reverse(void);
void stop(void);
/* --------- LCD --------- */
void lcd_init(void);
void cmd(unsigned char a);
void dat(unsigned char b);
void show(unsigned char *s);
void lcd_delay(void);

/* ---------- UART -------- */
void uart_init(void);
unsigned char uart_receive(void);
void uart_send(unsigned char data);
void uart_send_string(unsigned char *str);

/* ------- Main ------- */
int main() {
    unsigned char received_pass[4];
    int count;

    VPBDIV = 0x01;                 // PCLK = 60MHz
    IO0DIR |= 0xf00fc;
    IO1DIR |= 0x0f << 16;

    IODIR0 |= (1 << 8);
    IODIR0 |= (1 << 9);

    lcd_init();
    uart_init();

    while(1) {
        for (count = 0; count < 4; count++) {
            received_pass[count] = uart_receive();
        }

        if ( (pass[0] == received_pass[0]) && 
             (pass[1] == received_pass[1]) && 
             (pass[2] == received_pass[2]) && 
             (pass[3] == received_pass[3]) ) {
            uart_send('1');  // Send success response
            cmd(0x80);
            show("Access Granted");
            forward();
            delay();
            stop();
            reverse();
            delay();
            stop();
        } else {
            uart_send('0');  // Send failure response
            cmd(0x80);
            show("Access Denied");
            delay();
        }
        cmd(0x01); // Clear display
    }
}

/* ----- LCD Functions ------- */
void lcd_init() {
    cmd(0x02);
    cmd(0x28);
    cmd(0x0c);
    cmd(0x06);
    cmd(0x80);
}

void cmd(unsigned char a) {
    IO0PIN &= 0xffffff03;
    IO0PIN |= (a & 0xf0) << 0;
    IO0CLR |= bit(2);                // rs=0
    IO0CLR |= bit(1);                // rw=0
    IO0SET |= bit(3);                 // en=1
    lcd_delay();
    IO0CLR |= bit(3);                 // en=0

    IO0PIN &= 0xffffff03;
    IO0PIN |= ((a << 4)  & 0xf0) << 0;
    IO0CLR |= bit(2);                // rs=0
    IO0CLR |= bit(1);                // rw=0
    IO0SET |= bit(3);                 // en=1
    lcd_delay();
    IO0CLR |= bit(3);                 // en=0
}

void dat(unsigned char b) {
    IO0PIN &= 0xffffff03;
    IO0PIN |= (b & 0xf0) << 0;
    IO0SET |= bit(2);                // rs=1
    IO0CLR |= bit(1);                // rw=0
    IO0SET |= bit(3);            // en=1
    lcd_delay();
    IO0CLR |= bit(3);            // en=0

    IO0PIN &= 0xffffff03;
    IO0PIN |= ((b << 4)  & 0xf0) << 0;
    IO0SET |= bit(2);                // rs=1
    IO0CLR |= bit(1);                // rw=0
    IO0SET |= bit(3);            // en=1
    lcd_delay();
    IO0CLR |= bit(3);            // en=0
}

void show(unsigned char *s) {
    while(*s) {
        dat(*s++);
    }
}

void lcd_delay() {
    unsigned int i;
    for(i = 0; i <= 1000; i++);
}

/* ---------- DC Motor --------- */
void forward() {
    IO0SET = bit(16) | bit(18);
    IO0CLR = bit(17);   
}

void reverse() {
    IO0SET = bit(17) | bit(18);
    IO0CLR = bit(16);   
}

void stop() {
    IO0CLR = bit(18);   
}

/* ---------- UART Functions -------- */
void uart_init() {
    PINSEL0 |= 0x00000005;     // Enable RxD0 and TxD0 pins
    U0LCR = 0x83;              // 8 bits, no Parity, 1 Stop bit
    U0DLM = 0; U0DLL = 97;     // 9600 Baud Rate @ 15MHz PCLK
    U0LCR = 0x03;              // DLAB = 0
    U0FCR = 0x07;              // Enable and reset TX and RX FIFO
}

void uart_send(unsigned char data) {
    while (!(U0LSR & 0x20));   // Wait until THR empty
    U0THR = data;
}

unsigned char uart_receive() {
    while (!(U0LSR & 0x01));   // Wait until RBR contains valid data
    return U0RBR;
}

void uart_send_string(unsigned char *str) {
    while (*str) {
        uart_send(*str++);
    }
}
